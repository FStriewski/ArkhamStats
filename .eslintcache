[{"/home/striewsk/fs/arkhamdraw/src/index.tsx":"1","/home/striewsk/fs/arkhamdraw/src/App.tsx":"2","/home/striewsk/fs/arkhamdraw/src/types.ts":"3","/home/striewsk/fs/arkhamdraw/src/lookups/investigatorList.ts":"4","/home/striewsk/fs/arkhamdraw/src/Components/SingleInvestigator.tsx":"5","/home/striewsk/fs/arkhamdraw/src/Components/InvestigatorPortrait.tsx":"6","/home/striewsk/fs/arkhamdraw/src/Components/InvestigatorComparison.tsx":"7","/home/striewsk/fs/arkhamdraw/src/Components/InvestigatorClasses.tsx":"8","/home/striewsk/fs/arkhamdraw/src/Components/UI/Sidebar.tsx":"9","/home/striewsk/fs/arkhamdraw/src/Components/UI/Controls.tsx":"10","/home/striewsk/fs/arkhamdraw/src/Components/UI/YearSlider.tsx":"11","/home/striewsk/fs/arkhamdraw/src/Components/UI/Accordion.tsx":"12","/home/striewsk/fs/arkhamdraw/src/Components/UI/InvestigatorPicker.tsx":"13","/home/striewsk/fs/arkhamdraw/src/utils/requests.ts":"14","/home/striewsk/fs/arkhamdraw/src/Components/UI/Title.tsx":"15","/home/striewsk/fs/arkhamdraw/src/Components/UI/Checkbox.tsx":"16","/home/striewsk/fs/arkhamdraw/src/Components/UI/ModeSwitch.tsx":"17","/home/striewsk/fs/arkhamdraw/src/Components/UI/Header.tsx":"18","/home/striewsk/fs/arkhamdraw/src/Components/Charts/BarChart.tsx":"19","/home/striewsk/fs/arkhamdraw/src/Components/Charts/LineChart.tsx":"20","/home/striewsk/fs/arkhamdraw/src/Components/Charts/AreaChart.tsx":"21","/home/striewsk/fs/arkhamdraw/src/lookups/decks.ts":"22","/home/striewsk/fs/arkhamdraw/src/Components/Charts/Shared.tsx":"23","/home/striewsk/fs/arkhamdraw/src/Components/UI/SidebarControls.tsx":"24"},{"size":201,"mtime":1610283826012,"results":"25","hashOfConfig":"26"},{"size":9115,"mtime":1610281855571,"results":"27","hashOfConfig":"26"},{"size":1522,"mtime":1610230822282,"results":"28","hashOfConfig":"26"},{"size":12909,"mtime":1610286448423,"results":"29","hashOfConfig":"26"},{"size":2942,"mtime":1610284191086,"results":"30","hashOfConfig":"26"},{"size":3198,"mtime":1610288278881,"results":"31","hashOfConfig":"26"},{"size":2234,"mtime":1610284172303,"results":"32","hashOfConfig":"26"},{"size":7867,"mtime":1610282077224,"results":"33","hashOfConfig":"26"},{"size":3816,"mtime":1610283990945,"results":"34","hashOfConfig":"26"},{"size":2066,"mtime":1610281937179,"results":"35","hashOfConfig":"26"},{"size":1435,"mtime":1610281901859,"results":"36","hashOfConfig":"26"},{"size":2046,"mtime":1610281950851,"results":"37","hashOfConfig":"26"},{"size":5932,"mtime":1610286222141,"results":"38","hashOfConfig":"26"},{"size":2408,"mtime":1610284085494,"results":"39","hashOfConfig":"26"},{"size":469,"mtime":1610281912959,"results":"40","hashOfConfig":"26"},{"size":1994,"mtime":1610281947267,"results":"41","hashOfConfig":"26"},{"size":874,"mtime":1610281924763,"results":"42","hashOfConfig":"26"},{"size":971,"mtime":1610281933835,"results":"43","hashOfConfig":"26"},{"size":3721,"mtime":1610287166881,"results":"44","hashOfConfig":"26"},{"size":3825,"mtime":1610287175405,"results":"45","hashOfConfig":"26"},{"size":4419,"mtime":1610287155525,"results":"46","hashOfConfig":"26"},{"size":505,"mtime":1610281860687,"results":"47","hashOfConfig":"26"},{"size":2633,"mtime":1610283792251,"results":"48","hashOfConfig":"26"},{"size":1312,"mtime":1610288164745,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"jjyfvi",{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"52"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/striewsk/fs/arkhamdraw/src/index.tsx",[],["110","111","112","113"],"/home/striewsk/fs/arkhamdraw/src/App.tsx",["114","115","116","117","118"],"import React from 'react';\nimport { Sidebar } from './Components/UI/Sidebar';\nimport { InvestigatorPicker } from './Components/UI/InvestigatorPicker';\nimport { YearSlider } from './Components/UI/YearSlider';\nimport { SingleInvestigator } from './Components/SingleInvestigator';\nimport { InvestigatorComparison } from './Components/InvestigatorComparison';\nimport { InvestigatorPortrait } from './Components/InvestigatorPortrait';\nimport { InvestigatorClasses } from './Components/InvestigatorClasses';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Controls } from './Components/UI/Controls';\nimport { CHARTTYPE, NUMMODE, PICKERSELECTION } from './types';\nimport { CustomizedAccordions } from './Components/UI/Accordion';\nimport { Typography } from '@material-ui/core';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport {\n  investigatorList,\n  investigatorClassColor\n} from './lookups/investigatorList';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <div>{children}</div>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  viewWrapper: {\n    // justifyContent: 'center'\n  },\n  appBar: {\n    top: 'auto',\n    bottom: 0\n  },\n  chartBundle: {\n    width: '800px',\n    justify: 'right'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  control: {\n    marginLeft: 'auto'\n  }\n}));\n\nexport const App = () => {\n  const classes = useStyles();\n  const [tab1, setTab1] = React.useState(0); // Current Tab\n  const [totalTab, setTotalTab] = React.useState(0); // Current Tab\n  const [tab3, setTab3] = React.useState(0); // Current Tab\n  const [year, setYear] = React.useState(2020);\n  const [dataMode, setRelMode] = React.useState<boolean>(true);\n  const [headerOpen, setHeaderOpen] = React.useState({ open: true, id: '0' });\n  const [chartType, setChartType] = React.useState<CHARTTYPE>(CHARTTYPE.LINE);\n\n  const setMode = (\n    event: React.ChangeEvent<HTMLInputElement>,\n    checked: boolean\n  ) => {\n    setRelMode(!dataMode);\n  };\n  const handleChange1 = (event: React.ChangeEvent, newTab: number) => {\n    setTab1(newTab);\n  };\n  const switchToTotalTab = (event: React.ChangeEvent, newTab: number) => {\n    setTotalTab(newTab);\n  };\n  const handleChange3 = (event: React.ChangeEvent, newTab: number) => {\n    setTab3(newTab);\n  };\n\n  const [investigatorCode, setInvestigatorCode] = React.useState('01004');\n\n  const handleDropdown = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setInvestigatorCode(event.target.value as string);\n  };\n\n  const handleSetYear = (event: any, year: number) => {\n    setYear(year);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <CustomizedAccordions\n        setHeaderOpen={setHeaderOpen}\n        headerOpen={headerOpen}\n      />\n      {headerOpen.open && headerOpen.id === '0' && (\n        <>\n          <Paper className={classes.root}>\n            <Tabs\n              value={tab1}\n              onChange={handleChange1}\n              indicatorColor='primary'\n              textColor='primary'\n              centered\n            >\n              <Tab label='Investigator Portrait' />\n              <Tab label='Investigator Comparison' />\n            </Tabs>\n          </Paper>\n\n          <TabPanel value={tab1} index={0}>\n            <InvestigatorPicker pickerType={PICKERSELECTION.SINGLE}>\n              {(investigatorSelection: string[]) => (\n                <InvestigatorPortrait\n                  dataMode={dataMode}\n                  chartType={chartType}\n                  setChartType={setChartType}\n                  setMode={setMode}\n                  year={year}\n                  handleSetYear={handleSetYear}\n                  investigatorCode={investigatorSelection[0]}\n                />\n              )}\n            </InvestigatorPicker>\n          </TabPanel>\n          <TabPanel value={tab1} index={1}>\n            <div className={classes.viewWrapper}>\n              <InvestigatorPicker pickerType={PICKERSELECTION.MULTI}>\n                {(investigatorSelection: string[]) => (\n                  <div className={classes.chartBundle}>\n                    <Controls\n                      dataMode={dataMode}\n                      setRelMode={setMode}\n                      chartType={chartType}\n                      setChartType={setChartType}\n                    />\n                    <InvestigatorComparison\n                      year={year}\n                      investigatorCodes={investigatorSelection}\n                      dataMode={dataMode}\n                      chartType={chartType}\n                      numMode={NUMMODE.DIST}\n                      handleSetYear={handleSetYear}\n                    />\n                    <YearSlider year={year} handleSetYear={handleSetYear} />\n                  </div>\n                )}\n              </InvestigatorPicker>\n            </div>\n          </TabPanel>\n        </>\n      )}\n\n      {headerOpen.open && headerOpen.id === '1' && (\n        <InvestigatorClasses\n          dataMode={dataMode}\n          chartType={chartType}\n          setChartType={setChartType}\n          setMode={setMode}\n          totalTab={totalTab}\n          switchToTotalTab={switchToTotalTab}\n          year={year}\n          handleSetYear={handleSetYear}\n        />\n      )}\n\n      {headerOpen.open && headerOpen.id === '2' && (\n        <div>\n          <Paper className={classes.root}>\n            <Tabs\n              value={tab3}\n              onChange={handleChange3}\n              indicatorColor='primary'\n              textColor='primary'\n              centered\n            >\n              <Tab label='Sums' />\n              <Tab label='Sums Multiple' />\n            </Tabs>\n          </Paper>\n          <TabPanel value={tab3} index={0}>\n            <div className={classes.viewWrapper}>\n              <Typography>BLABLA</Typography>\n              <FormControl className={classes.formControl}>\n                <InputLabel id='demo-simple-select-label'>\n                  Investigator\n                </InputLabel>\n                <Select\n                  labelId='demo-simple-select-label'\n                  id='demo-simple-select'\n                  value={investigatorCode}\n                  onChange={handleDropdown}\n                >\n                  {investigatorList.map((inv) => (\n                    <MenuItem key={inv.code} value={inv.code}>\n                      {inv.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <div className={classes.chartBundle}>\n                <Controls\n                  dataMode={dataMode}\n                  setRelMode={setMode}\n                  chartType={chartType}\n                  setChartType={setChartType}\n                />\n                <SingleInvestigator\n                  year={year}\n                  dataMode={dataMode}\n                  chartType={chartType}\n                  numMode={NUMMODE.SUM}\n                  handleSetYear={handleSetYear}\n                  investigatorCode={investigatorCode}\n                />\n              </div>\n              <YearSlider handleSetYear={handleSetYear} year={year} />\n            </div>\n          </TabPanel>\n          <TabPanel value={tab3} index={1}>\n            <div className={classes.viewWrapper}>\n              <Sidebar>\n                {(investigatorSelection: string[]) => (\n                  <div className={classes.chartBundle}>\n                    <Controls\n                      dataMode={dataMode}\n                      setRelMode={setMode}\n                      chartType={chartType}\n                      setChartType={setChartType}\n                    />\n                    <InvestigatorComparison\n                      year={year}\n                      investigatorCodes={investigatorSelection}\n                      dataMode={dataMode}\n                      chartType={chartType}\n                      numMode={NUMMODE.SUM}\n                      handleSetYear={handleSetYear}\n                    />\n                    <YearSlider handleSetYear={handleSetYear} year={year} />\n                  </div>\n                )}\n              </Sidebar>\n            </div>\n          </TabPanel>\n        </div>\n      )}\n    </div>\n  );\n};\n","/home/striewsk/fs/arkhamdraw/src/types.ts",["119","120","121","122"],"export type Investigator = {\n  id: number;\n  name: string;\n  date_creation: Date;\n  user_id: number;\n  investigator_code: string;\n  investigator_name: string;\n  slots: any;\n};\nexport type InvestigatorListEntry = {\n  code: string;\n  name: string;\n  faction_code: string;\n  color?: string;\n  deck_options: { [key: string]: any }[];\n};\n\nexport type InvestigatorListItem = {\n  name: string;\n  code: string;\n  faction_code: string;\n  deck_options: any;\n};\n\nexport type SingleInvestigator = {\n  [index: string]: DataPoint[];\n};\n\nexport type DataPoint = {\n  x: string;\n  y: number;\n};\nexport type DatePoint = {\n  x: Date;\n  y: number;\n};\n\nexport type APIResponse = {\n  meta: {\n    investigator: string[];\n    total: number;\n  };\n  datapoints: { [index: string]: SingleInvestigator };\n};\n\nexport type HeatHistogram = {\n  year: string;\n  ticks: { [key: string]: number };\n  start?: string;\n  end?: string;\n};\n\nexport type HeatMapObject = { [key: string]: number };\n\ntype Set = {\n  name: string;\n  values: number[];\n};\n\nexport type LineHistogram = {\n  year: string;\n  labels: string[];\n  datasets: Set[];\n};\n\nexport enum NUMMODE {\n  SUM = 'SUM',\n  DIST = 'DIST'\n}\nexport enum PICKERSELECTION {\n  SINGLE = 'SINGLE',\n  MULTI = 'MULTI'\n}\n\nexport enum ENTITY {\n  CLASSCOUNT = 'CLASSCOUNT',\n  SINGLEINV = 'SINGLEINV',\n  INVCOMP = 'INVCOMP'\n}\nexport enum CHARTTYPE {\n  BAR = 'BAR',\n  LINE = 'LINE',\n  AREA = 'AREA'\n}\n\nexport const determineDataTypeMode = (dataMode: boolean) =>\n  dataMode ? 'datapoints_relative' : 'datapoints_absolute';\n","/home/striewsk/fs/arkhamdraw/src/lookups/investigatorList.ts",["123","124","125"],"/home/striewsk/fs/arkhamdraw/src/Components/SingleInvestigator.tsx",["126","127","128","129","130","131","132","133","134","135"],"import React, { useEffect } from 'react';\nimport { InvestigatorLineChart } from './Charts/LineChart';\nimport { InvestigatorBarChart } from './Charts/BarChart';\nimport { InvestigatorAreaChart } from './Charts/AreaChart';\nimport {\n  getInvestigatorDistributionByDate,\n  getInvestigatorSumByDate\n} from '../utils/requests';\nimport {\n  APIResponse,\n  CHARTTYPE,\n  determineDataTypeMode,\n  NUMMODE\n} from '../types';\nimport { makeStyles } from '@material-ui/core/styles';\n// import InputLabel from '@material-ui/core/InputLabel';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import FormControl from '@material-ui/core/FormControl';\n// import Select from '@material-ui/core/Select';\n// import { investigatorList } from '../lookups/investigatorList';\n\nconst useStyles = makeStyles((theme) => ({\n  // formControl: {\n  //   margin: theme.spacing(1),\n  //   minWidth: 120\n  // },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\ntype Props = {\n  year: number;\n  handleSetYear: (event: any, year: number) => void;\n  dataMode: boolean;\n  chartType: CHARTTYPE;\n  numMode: NUMMODE;\n  investigatorCode: string;\n};\n\nexport const SingleInvestigator = ({\n  year,\n  handleSetYear,\n  dataMode,\n  chartType,\n  numMode,\n  investigatorCode\n}: Props): React.ReactElement => {\n  const classes = useStyles();\n  // const [investigatorCode, setInvestigatorCode] = React.useState('01004');\n  const [\n    selectedInvestigators,\n    chooseInvestigators\n  ] = React.useState<APIResponse>();\n\n  const selectedYear = year.toString();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result: APIResponse =\n        numMode === NUMMODE.DIST\n          ? await getInvestigatorDistributionByDate(investigatorCode)\n          : await getInvestigatorSumByDate(investigatorCode);\n      chooseInvestigators(result);\n    };\n    fetchData().catch((e) => console.log(e));\n  }, [investigatorCode]);\n\n  // const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n  //   setInvestigatorCode(event.target.value as string);\n  // };\n  const dataType = determineDataTypeMode(dataMode);\n  return (\n    <>\n      {selectedInvestigators &&\n        selectedInvestigators[dataType] &&\n        (chartType === CHARTTYPE.BAR ? (\n          <InvestigatorBarChart\n            input={selectedInvestigators[dataType][selectedYear]}\n            ids={[investigatorCode]}\n            dataMode={dataMode}\n            numMode={numMode}\n          />\n        ) : chartType === CHARTTYPE.LINE ? (\n          <InvestigatorLineChart\n            input={selectedInvestigators[dataType][selectedYear]}\n            ids={[investigatorCode]}\n            dataMode={dataMode}\n            numMode={numMode}\n          />\n        ) : (\n          <InvestigatorAreaChart\n            input={selectedInvestigators[dataType][selectedYear]}\n            ids={[investigatorCode]}\n            dataMode={dataMode}\n            numMode={numMode}\n          />\n        ))}\n    </>\n  );\n};\n","/home/striewsk/fs/arkhamdraw/src/Components/InvestigatorPortrait.tsx",["136","137","138","139","140","141","142","143","144"],"/home/striewsk/fs/arkhamdraw/src/Components/InvestigatorComparison.tsx",["145","146","147","148","149","150","151","152","153","154"],"import React, { useEffect } from 'react';\nimport { InvestigatorLineChart } from './Charts/LineChart';\nimport { InvestigatorBarChart } from './Charts/BarChart';\nimport { InvestigatorAreaChart } from './Charts/AreaChart';\nimport {\n  getMultipleInvestigatorDistributionByDate,\n  getMultipleInvestigatorSumByDate\n} from '../utils/requests';\nimport {\n  determineDataTypeMode,\n  APIResponse,\n  CHARTTYPE,\n  NUMMODE\n} from '../types';\n\ntype Props = {\n  investigatorCodes: string[];\n  year: number;\n  handleSetYear: (event: any, year: number) => void;\n  dataMode: boolean;\n  chartType: CHARTTYPE;\n  numMode: NUMMODE;\n};\n\nexport const InvestigatorComparison = ({\n  investigatorCodes,\n  year,\n  handleSetYear,\n  dataMode,\n  chartType,\n  numMode\n}: Props): React.ReactElement => {\n  const [\n    selectedInvestigators,\n    chooseInvestigators\n  ] = React.useState<APIResponse>();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result: APIResponse =\n        numMode === NUMMODE.DIST\n          ? await getMultipleInvestigatorDistributionByDate(investigatorCodes)\n          : await getMultipleInvestigatorSumByDate(investigatorCodes);\n      chooseInvestigators(result);\n    };\n    fetchData().catch((e) => console.log(e));\n  }, [investigatorCodes]);\n\n  const selectedYear = year.toString();\n  const dataType = determineDataTypeMode(dataMode);\n  const color = '#FF0000';\n\n  return (\n    <div>\n      {selectedInvestigators &&\n        selectedInvestigators[dataType] &&\n        (chartType === CHARTTYPE.BAR ? (\n          <InvestigatorBarChart\n            input={selectedInvestigators[dataType][selectedYear]}\n            ids={investigatorCodes}\n            dataMode={dataMode}\n            numMode={numMode}\n          />\n        ) : chartType === CHARTTYPE.LINE ? (\n          <InvestigatorLineChart\n            input={selectedInvestigators[dataType][selectedYear]}\n            ids={investigatorCodes}\n            dataMode={dataMode}\n            numMode={numMode}\n          />\n        ) : (\n          <InvestigatorAreaChart\n            input={selectedInvestigators[dataType][selectedYear]}\n            ids={investigatorCodes}\n            dataMode={dataMode}\n            numMode={numMode}\n          />\n        ))}\n    </div>\n  );\n};\n","/home/striewsk/fs/arkhamdraw/src/Components/InvestigatorClasses.tsx",["155","156","157","158","159","160","161","162","163","164","165","166","167","168"],"import React, { useEffect } from 'react';\nimport { YearSlider } from './UI/YearSlider';\nimport { Title, SubTitle } from './UI/Title';\nimport { ClassLineChart } from './Charts/LineChart';\nimport { ClassBarChart } from './Charts/BarChart';\nimport { ClassAreaChart } from './Charts/AreaChart';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport { Controls } from './UI/Controls';\nimport {\n  CHARTTYPE,\n  NUMMODE,\n  determineDataTypeMode,\n  APIResponse\n} from '../types';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport {\n  investigatorList,\n  investigatorClassColor\n} from '../lookups/investigatorList';\nimport {\n  getClassDistributionByDate,\n  getClassSumByDate\n} from '../utils/requests';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  viewWrapper: {\n    // justifyContent: 'center'\n  },\n  chartBundle: {\n    width: '1000px',\n    justify: 'right',\n    float: 'right'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  control: {\n    marginLeft: 'auto'\n  }\n}));\nfunction TabPanel(props: TabPanelProps) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <div>{children}</div>\n        </Box>\n      )}\n    </div>\n  );\n}\n\ntype Props = {\n  dataMode: boolean;\n  chartType: CHARTTYPE;\n  setChartType: (type: CHARTTYPE) => void;\n  year: number;\n  handleSetYear: (event: any, year: number) => void;\n  setMode: (\n    event: React.ChangeEvent<HTMLInputElement>,\n    checked: boolean\n  ) => void;\n  totalTab: number;\n  switchToTotalTab: (event: React.ChangeEvent, newTab: number) => void;\n};\n\nexport const InvestigatorClasses = ({\n  dataMode,\n  chartType,\n  setChartType,\n  setMode,\n  year,\n  handleSetYear,\n  totalTab,\n  switchToTotalTab\n}: Props): React.ReactElement => {\n  const [investigatorClass, setInvestigatorClass] = React.useState('all');\n  const changeInvestigatorClass = (\n    event: React.ChangeEvent<{ value: unknown }>\n  ) => {\n    setInvestigatorClass(event.target.value as string);\n  };\n  const [selectedClassDist, chooseClassDist] = React.useState<APIResponse>();\n  const [selectedClassSum, chooseClassSum] = React.useState<APIResponse>();\n\n  const selectedYear = year.toString();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result: APIResponse = (await getClassDistributionByDate(\n        investigatorClass\n      )) as APIResponse;\n      chooseClassDist(result);\n    };\n    fetchData().catch((e) => console.log(e));\n  }, [investigatorClass]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result: APIResponse = (await getClassSumByDate(\n        investigatorClass\n      )) as APIResponse;\n      chooseClassSum(result);\n    };\n    fetchData().catch((e) => console.log(e));\n  }, [investigatorClass]);\n\n  const investigatorClassList = Object.keys(investigatorClassColor).map(\n    (entry) => ({\n      name: entry,\n      color: investigatorClassColor[entry] as string\n    })\n  );\n  const dataType = determineDataTypeMode(dataMode);\n  const color =\n    investigatorClass === 'all'\n      ? '#000000'\n      : (investigatorClassColor[investigatorClass] as string);\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Paper className={classes.root}>\n        <Tabs\n          value={totalTab}\n          onChange={switchToTotalTab}\n          indicatorColor='primary'\n          textColor='primary'\n          centered\n        >\n          <Tab label='Class Totals' />\n          <Tab label='Class Sum' />\n        </Tabs>\n      </Paper>\n      <TabPanel value={totalTab} index={0}>\n        <div className={classes.viewWrapper}>\n          <Title content='Classes' />\n          <SubTitle content='Now think about |x| > 2. To show x on the number line' />\n          <FormControl className={classes.formControl}>\n            <InputLabel id='demo-simple-select-label'>Class</InputLabel>\n            <Select\n              labelId='demo-simple-select-label'\n              id='demo-simple-select'\n              value={investigatorClass}\n              onChange={changeInvestigatorClass}\n            >\n              {investigatorClassList.map((cls) => (\n                <MenuItem key={cls.name} value={cls.name}>\n                  {cls.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <div className={classes.chartBundle}>\n            <Controls\n              dataMode={dataMode}\n              setRelMode={setMode}\n              chartType={chartType}\n              setChartType={setChartType}\n            />\n            {selectedClassDist &&\n              selectedClassDist[dataType] &&\n              (chartType === CHARTTYPE.BAR ? (\n                <ClassBarChart\n                  input={selectedClassDist[dataType][selectedYear]}\n                  ids={[investigatorClass]}\n                  color={color}\n                  dataMode={dataMode}\n                  numMode={NUMMODE.DIST}\n                />\n              ) : chartType === CHARTTYPE.LINE ? (\n                <ClassLineChart\n                  input={selectedClassDist[dataType][selectedYear]}\n                  ids={[investigatorClass]}\n                  color={color}\n                  dataMode={dataMode}\n                  numMode={NUMMODE.DIST}\n                />\n              ) : (\n                <ClassAreaChart\n                  input={selectedClassDist[dataType][selectedYear]}\n                  ids={[investigatorClass]}\n                  color={color}\n                  dataMode={dataMode}\n                  numMode={NUMMODE.DIST}\n                />\n              ))}\n            <YearSlider handleSetYear={handleSetYear} year={year} />\n          </div>\n        </div>\n      </TabPanel>\n      <TabPanel value={totalTab} index={1}>\n        <div className={classes.viewWrapper}>\n          <div className={classes.chartBundle}>\n            <Controls\n              dataMode={dataMode}\n              setRelMode={setMode}\n              chartType={chartType}\n              setChartType={setChartType}\n            />\n            {selectedClassSum &&\n              selectedClassSum[dataType] &&\n              (chartType === CHARTTYPE.BAR ? (\n                <ClassBarChart\n                  input={selectedClassSum[dataType][selectedYear]}\n                  ids={[investigatorClass]}\n                  color={color}\n                  dataMode={dataMode}\n                  numMode={NUMMODE.SUM}\n                />\n              ) : chartType === CHARTTYPE.LINE ? (\n                <ClassLineChart\n                  input={selectedClassSum[dataType][selectedYear]}\n                  ids={[investigatorClass]}\n                  color={color}\n                  dataMode={dataMode}\n                  numMode={NUMMODE.SUM}\n                />\n              ) : (\n                <ClassAreaChart\n                  input={selectedClassSum[dataType][selectedYear]}\n                  ids={[investigatorClass]}\n                  color={color}\n                  dataMode={dataMode}\n                  numMode={NUMMODE.SUM}\n                />\n              ))}\n            <YearSlider handleSetYear={handleSetYear} year={year} />\n          </div>\n        </div>\n      </TabPanel>\n    </div>\n  );\n};\n","/home/striewsk/fs/arkhamdraw/src/Components/UI/Sidebar.tsx",["169","170"],"import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { CustomCheckbox } from '../UI/Checkbox';\nimport {\n  investigatorList,\n  lookupInvestigator\n} from '../../lookups/investigatorList';\nimport { InvestigatorListItem } from '../../types';\nimport Slide from '@material-ui/core/Slide';\n\nconst drawerWidth = 220;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex'\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth,\n      marginTop: '140px'\n    },\n    drawerContainer: {\n      overflow: 'auto'\n    },\n    fcLabel: {\n      color: '#6C6A6A',\n      fontSize: '10px'\n    },\n    formControl: {\n      margin: theme.spacing(2)\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(1)\n    }\n  })\n);\n\nexport const Sidebar = (props: any): React.ReactElement => {\n  const classes = useStyles();\n\n  const [investigatorSelection, setSelection] = React.useState<string[]>([\n    '01004'\n  ]);\n\n  const handleSelection = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const investigator = event.target.id;\n    if (!investigatorSelection.includes(investigator)) {\n      setSelection([...investigatorSelection, investigator]);\n    } else {\n      const newstate = investigatorSelection.filter(\n        (item) => item !== investigator\n      );\n      setSelection(newstate);\n    }\n  };\n\n  const checked = (code: string) => investigatorSelection.includes(code);\n  const error = investigatorSelection.length >= 3;\n\n  return (\n    <div className={classes.root}>\n      <Slide direction='right' in mountOnEnter unmountOnExit>\n        <Drawer\n          className={classes.drawer}\n          variant='permanent'\n          classes={{\n            paper: classes.drawerPaper\n          }}\n        >\n          <div className={classes.drawerContainer}>\n            <FormControl\n              required\n              error={error}\n              component='fieldset'\n              className={classes.formControl}\n            >\n              {/* <FormLabel component=\"legend\">Pick two</FormLabel> */}\n              <FormGroup>\n                {investigatorList\n                  .sort((a, b) =>\n                    a.name < b.name ? -1 : a.name > b.name ? 1 : 0\n                  )\n                  .map((inv: InvestigatorListItem) => (\n                    <FormControlLabel\n                      control={\n                        <CustomCheckbox\n                          checked={checked(inv.code)}\n                          onChange={handleSelection}\n                          name={inv.name}\n                          id={inv.code}\n                          disabled={!checked(inv.code) && error}\n                        />\n                      }\n                      label={inv.name}\n                      key={inv.code}\n                      style={{ color: lookupInvestigator(inv.code).color }}\n                      className={classes.fcLabel}\n                    />\n                  ))}\n              </FormGroup>\n              <FormHelperText>You can display an error</FormHelperText>\n            </FormControl>\n          </div>\n        </Drawer>\n      </Slide>\n      <main className={classes.content}>\n        {/* eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,  @typescript-eslint/no-unsafe-call */}\n        {props.children(investigatorSelection)}\n      </main>\n    </div>\n  );\n};\n","/home/striewsk/fs/arkhamdraw/src/Components/UI/Controls.tsx",["171","172","173"],"import React from 'react';\nimport {\n  withStyles,\n  makeStyles,\n  Theme,\n  createStyles\n} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { ModeSwitch } from './ModeSwitch';\nimport Button from '@material-ui/core/Button';\nimport { CHARTTYPE } from '../../types';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    paper: {\n      cursor: 'pointer',\n      backgroundColor: 'white',\n      width: '350px',\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      alignItems: 'center',\n      padding: '5px',\n      marginRight: 'auto',\n      marginLeft: '85px',\n      marginBottom: '-25px'\n    },\n    button: {\n      margin: '0 5px'\n    }\n  })\n);\ntype Props = {\n  dataMode: boolean;\n  setRelMode: (\n    event: React.ChangeEvent<HTMLInputElement>,\n    checked: boolean\n  ) => void;\n  chartType: CHARTTYPE;\n  setChartType: (type: CHARTTYPE) => void;\n};\n\nexport const Controls = ({\n  dataMode,\n  setRelMode,\n  chartType,\n  setChartType\n}: Props) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.paper}>\n      <div>\n        <Button\n          className={classes.button}\n          size='small'\n          variant={chartType === CHARTTYPE.BAR ? 'contained' : 'outlined'}\n          color='primary'\n          onClick={() => setChartType(CHARTTYPE.BAR)}\n        >\n          Bar\n        </Button>\n        <Button\n          className={classes.button}\n          size='small'\n          variant={chartType === CHARTTYPE.LINE ? 'contained' : 'outlined'}\n          color='primary'\n          onClick={() => setChartType(CHARTTYPE.LINE)}\n        >\n          Line\n        </Button>\n        <Button\n          className={classes.button}\n          size='small'\n          variant={chartType === CHARTTYPE.AREA ? 'contained' : 'outlined'}\n          color='primary'\n          onClick={() => setChartType(CHARTTYPE.AREA)}\n        >\n          Area\n        </Button>\n      </div>\n      <div>\n        <ModeSwitch dataMode={dataMode} setRelMode={setRelMode} />\n      </div>\n    </Paper>\n  );\n};\n","/home/striewsk/fs/arkhamdraw/src/Components/UI/YearSlider.tsx",["174","175"],"import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Slider from '@material-ui/core/Slider';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\ntype YearSliderProps = {\n  year: number;\n  handleSetYear: (event: any, year: number) => void;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      width: '400px',\n      // maxWidth: \"400px\",\n      display: 'flex',\n      justifyContent: 'center',\n      position: 'absolute',\n      bottom: '20px',\n      right: '40px'\n    },\n    slider: {\n      maxWidth: '350px',\n      marginBottom: '30px',\n      position: 'relative'\n    }\n  })\n);\n\nexport const YearSlider = ({\n  handleSetYear,\n  year\n}: YearSliderProps): React.ReactElement => {\n  const classes = useStyles();\n\n  const marks = [\n    {\n      value: 2016,\n      label: '2016'\n    },\n    {\n      value: 2017,\n      label: '2017'\n    },\n    {\n      value: 2018,\n      label: '2018'\n    },\n    {\n      value: 2019,\n      label: '2019'\n    },\n    {\n      value: 2020,\n      label: '2020'\n    },\n    {\n      value: 2021,\n      label: '2021'\n    }\n  ];\n  return (\n    <Paper className={classes.paper}>\n      <Slider\n        className={classes.slider}\n        defaultValue={2020}\n        min={2016}\n        max={2021}\n        step={1}\n        marks={marks}\n        track={false}\n        value={year}\n        onChange={handleSetYear}\n      />\n    </Paper>\n  );\n};\n","/home/striewsk/fs/arkhamdraw/src/Components/UI/Accordion.tsx",["176"],"import React from 'react';\nimport { makeStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport MuiAccordion from '@material-ui/core/Accordion';\nimport { Button } from '@material-ui/core';\nimport { Header } from './Header';\n\nconst Accordion = withStyles({\n  root: {\n    flex: 1,\n    border: '1px solid rgba(0, 0, 0, .125)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0\n    },\n    '&:before': {\n      display: 'none'\n    },\n    '&$expanded': {\n      margin: 'auto'\n    }\n  },\n  expanded: {}\n})(MuiAccordion);\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  },\n  test: {},\n  tabLikeButton: {\n    padding: theme.spacing(1),\n    border: '1px solid #c0c0c0',\n    flex: 1\n  }\n}));\n\ntype AccProps = {\n  setHeaderOpen: ({ id: string, open: boolean }) => void;\n  headerOpen: {\n    id: string;\n    open: boolean;\n  };\n};\n\nexport const CustomizedAccordions = ({\n  setHeaderOpen,\n  headerOpen\n}: AccProps): React.ReactElement => {\n  const classes = useStyles();\n\n  const handleHeaderClick = ({ id }: { id: string }) => {\n    if (headerOpen.id === id) {\n      setHeaderOpen({ ...headerOpen, open: !headerOpen.open });\n      return;\n    }\n    if (headerOpen.id !== id) {\n      setHeaderOpen({ ...headerOpen, id });\n      if (!headerOpen.open) {\n        setHeaderOpen({ open: !headerOpen.open, id });\n      }\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <div className={classes.container}>\n        <Button\n          className={classes.tabLikeButton}\n          onClick={() => handleHeaderClick({ id: '0' })}\n        >\n          Investigators\n        </Button>\n        <Button\n          className={classes.tabLikeButton}\n          onClick={() => handleHeaderClick({ id: '1' })}\n        >\n          Classes\n        </Button>\n        <Button\n          className={classes.tabLikeButton}\n          onClick={() => handleHeaderClick({ id: '2' })}\n        >\n          Sums\n        </Button>\n      </div>\n    </>\n  );\n};\n","/home/striewsk/fs/arkhamdraw/src/Components/UI/InvestigatorPicker.tsx",["177","178","179","180","181"],"/home/striewsk/fs/arkhamdraw/src/utils/requests.ts",["182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199"],"export const BASEURL = '127.0.0.1:5000';\n\nexport const getInvestigatorDistributionByDate = async (icode: string) => {\n  const route = `/investigator/dist/${icode}`;\n  const result = await fetch(route, {\n    method: 'GET',\n    mode: 'no-cors',\n    cache: 'no-cache',\n    referrerPolicy: 'same-origin'\n  }).then((response) => response.json());\n  return result;\n};\nexport const getInvestigatorSumByDate = async (icode: string) => {\n  const route = `/investigator/sum/${icode}`;\n  const result = await fetch(route, {\n    method: 'GET',\n    mode: 'no-cors',\n    cache: 'no-cache',\n    referrerPolicy: 'same-origin'\n  }).then((response) => response.json());\n  return result;\n};\n\nexport const getMultipleInvestigatorDistributionByDate = async (\n  icodes: string[]\n) => {\n  const params = {};\n  icodes.forEach((code, index) => (params[`i${index}`] = code));\n\n  const queryString = new URLSearchParams(params);\n  // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n  const route = `/investigators/dist?${queryString}`;\n  const result = await fetch(route, {\n    method: 'GET',\n    mode: 'no-cors',\n    cache: 'no-cache',\n    referrerPolicy: 'same-origin'\n  }).then((response) => response.json());\n  return result;\n};\nexport const getMultipleInvestigatorSumByDate = async (icodes: string[]) => {\n  const params = {};\n  icodes.forEach((code, index) => (params[`i${index}`] = code));\n  console.log(params);\n\n  const queryString = new URLSearchParams(params);\n  // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n  const route = `/investigators/sum?${queryString}`;\n  const result = await fetch(route, {\n    method: 'GET',\n    mode: 'no-cors',\n    cache: 'no-cache',\n    referrerPolicy: 'same-origin'\n  }).then((response) => response.json());\n  return result;\n};\n\nexport const getClassDistributionByDate = async (iclass: string) => {\n  const route = `/class/dist/${iclass}`;\n  const result = await fetch(route, {\n    method: 'GET',\n    mode: 'no-cors',\n    cache: 'no-cache',\n    referrerPolicy: 'same-origin'\n  }).then((response) => response.json());\n  return result;\n};\n\nexport const getClassSumByDate = async (iclass: string) => {\n  const route = `/class/sum/${iclass}`;\n  const result = await fetch(route, {\n    method: 'GET',\n    mode: 'no-cors',\n    cache: 'no-cache',\n    referrerPolicy: 'same-origin'\n  }).then((response) => response.json());\n  return result;\n};\n","/home/striewsk/fs/arkhamdraw/src/Components/UI/Title.tsx",[],"/home/striewsk/fs/arkhamdraw/src/Components/UI/Checkbox.tsx",[],"/home/striewsk/fs/arkhamdraw/src/Components/UI/ModeSwitch.tsx",[],"/home/striewsk/fs/arkhamdraw/src/Components/UI/Header.tsx",[],"/home/striewsk/fs/arkhamdraw/src/Components/Charts/BarChart.tsx",["200","201","202","203","204","205","206","207"],"/home/striewsk/fs/arkhamdraw/src/Components/Charts/LineChart.tsx",["208","209","210","211","212","213","214","215"],"/home/striewsk/fs/arkhamdraw/src/Components/Charts/AreaChart.tsx",["216","217","218","219","220","221","222","223"],"/home/striewsk/fs/arkhamdraw/src/lookups/decks.ts",[],"/home/striewsk/fs/arkhamdraw/src/Components/Charts/Shared.tsx",["224","225"],"import React from 'react';\nimport { YAxis } from 'recharts';\nimport { NUMMODE } from '../../types';\n\nexport const setYAxis = (dataMode: boolean, numMode: NUMMODE) => {\n  if (numMode === NUMMODE.DIST) {\n    return dataMode ? (\n      <YAxis\n        domain={[0, (dataMax) => Math.max(16, dataMax)]}\n        label={{\n          value: '[%] of all decks',\n          angle: -90,\n          position: 'center',\n          fontSize: '14px'\n        }}\n      /> // RELATIVE\n    ) : (\n      <YAxis\n        domain={[0, (dataMax) => Math.max(100, dataMax)]}\n        label={{\n          value: 'Number of decks',\n          angle: -90,\n          position: 'center',\n          fontSize: '14px'\n        }}\n      />\n    ); // ABSOLUTE\n  }\n  if (numMode === NUMMODE.SUM) {\n    return dataMode ? (\n      <YAxis\n        domain={[\n          0,\n          (dataMax: number) =>\n            Math.round((dataMax + Number.EPSILON) * 100) / 100\n        ]}\n        label={{\n          value: 'Running sum of decks',\n          angle: -90,\n          position: 'center',\n          fontSize: '14px'\n        }}\n      /> // RELATIVE\n    ) : (\n      <YAxis\n        domain={[0, (dataMax) => Math.max(dataMax)]}\n        label={{\n          value: 'Running sum of decks',\n          angle: -90,\n          position: 'center',\n          fontSize: '14px'\n        }}\n      />\n    ); // RELATIVE\n  }\n};\n\nexport const setClassYAxis = (dataMode: boolean, numMode: NUMMODE) => {\n  if (numMode === NUMMODE.DIST) {\n    return dataMode ? (\n      <YAxis\n        domain={[0, (dataMax) => Math.max(45, dataMax)]}\n        label={{\n          value: '[%] of all classes',\n          angle: -90,\n          position: 'center',\n          fontSize: '14px'\n        }}\n      /> // RELATIVE\n    ) : (\n      <YAxis\n        domain={[0, (dataMax) => Math.max(300, dataMax)]}\n        label={{\n          value: 'Number of decks in this class',\n          angle: -90,\n          position: 'center',\n          fontSize: '14px'\n        }}\n      />\n    ); // ABSOLUTE\n  }\n  if (numMode === NUMMODE.SUM) {\n    return dataMode ? (\n      <YAxis\n        domain={[\n          0,\n          (dataMax: number) =>\n            Math.round((dataMax + Number.EPSILON) * 100) / 100\n        ]}\n        label={{\n          value: 'Running sum of class decks [%]',\n          angle: -90,\n          position: 'center',\n          fontSize: '14px'\n        }}\n      /> // RELATIVE\n    ) : (\n      <YAxis\n        domain={[0, (dataMax) => Math.max(dataMax)]}\n        label={{\n          value: 'Running sum of decks',\n          angle: -90,\n          position: 'center',\n          fontSize: '14px'\n        }}\n      />\n    ); // RELATIVE\n  }\n};\n","/home/striewsk/fs/arkhamdraw/src/Components/UI/SidebarControls.tsx",["226","227"],{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","severity":1,"message":"237","line":25,"column":3,"nodeType":"238","messageId":"239","endLine":25,"endColumn":25},{"ruleId":"240","severity":1,"message":"241","line":79,"column":20,"nodeType":"242","messageId":"243","endLine":79,"endColumn":25},{"ruleId":"236","severity":1,"message":"244","line":90,"column":5,"nodeType":"238","messageId":"239","endLine":90,"endColumn":47},{"ruleId":"236","severity":1,"message":"245","line":91,"column":5,"nodeType":"238","messageId":"239","endLine":91,"endColumn":21},{"ruleId":"246","severity":1,"message":"247","line":111,"column":33,"nodeType":"248","messageId":"249","endLine":111,"endColumn":36,"suggestions":"250"},{"ruleId":"246","severity":1,"message":"247","line":8,"column":10,"nodeType":"248","messageId":"249","endLine":8,"endColumn":13,"suggestions":"251"},{"ruleId":"246","severity":1,"message":"247","line":15,"column":34,"nodeType":"248","messageId":"249","endLine":15,"endColumn":37,"suggestions":"252"},{"ruleId":"246","severity":1,"message":"247","line":22,"column":17,"nodeType":"248","messageId":"249","endLine":22,"endColumn":20,"suggestions":"253"},{"ruleId":"240","severity":1,"message":"241","line":86,"column":38,"nodeType":"242","messageId":"243","endLine":86,"endColumn":60},{"ruleId":"240","severity":1,"message":"241","line":69,"column":35,"nodeType":"242","messageId":"243","endLine":69,"endColumn":50},{"ruleId":"254","severity":1,"message":"255","line":72,"column":47,"nodeType":"238","messageId":"256","endLine":72,"endColumn":63},{"ruleId":"257","severity":1,"message":"258","line":75,"column":3,"nodeType":"259","messageId":"260","endLine":75,"endColumn":73},{"ruleId":"246","severity":1,"message":"247","line":34,"column":26,"nodeType":"248","messageId":"249","endLine":34,"endColumn":29,"suggestions":"261"},{"ruleId":"236","severity":1,"message":"262","line":43,"column":3,"nodeType":"238","messageId":"239","endLine":43,"endColumn":16},{"ruleId":"236","severity":1,"message":"263","line":49,"column":9,"nodeType":"238","messageId":"239","endLine":49,"endColumn":16},{"ruleId":"257","severity":1,"message":"258","line":60,"column":13,"nodeType":"264","messageId":"260","endLine":63,"endColumn":61},{"ruleId":"257","severity":1,"message":"258","line":79,"column":20,"nodeType":"265","messageId":"260","endLine":79,"endColumn":65},{"ruleId":"266","severity":1,"message":"267","line":79,"column":20,"nodeType":"265","messageId":"268","endLine":79,"endColumn":65},{"ruleId":"257","severity":1,"message":"258","line":86,"column":20,"nodeType":"265","messageId":"260","endLine":86,"endColumn":65},{"ruleId":"266","severity":1,"message":"267","line":86,"column":20,"nodeType":"265","messageId":"268","endLine":86,"endColumn":65},{"ruleId":"257","severity":1,"message":"258","line":93,"column":20,"nodeType":"265","messageId":"260","endLine":93,"endColumn":65},{"ruleId":"266","severity":1,"message":"267","line":93,"column":20,"nodeType":"265","messageId":"268","endLine":93,"endColumn":65},{"ruleId":"236","severity":1,"message":"269","line":15,"column":3,"nodeType":"238","messageId":"239","endLine":15,"endColumn":27},{"ruleId":"236","severity":1,"message":"270","line":18,"column":17,"nodeType":"238","messageId":"239","endLine":18,"endColumn":25},{"ruleId":"246","severity":1,"message":"247","line":25,"column":26,"nodeType":"248","messageId":"249","endLine":25,"endColumn":29,"suggestions":"271"},{"ruleId":"257","severity":1,"message":"258","line":96,"column":22,"nodeType":"265","messageId":"260","endLine":96,"endColumn":67},{"ruleId":"266","severity":1,"message":"267","line":96,"column":22,"nodeType":"265","messageId":"268","endLine":96,"endColumn":67},{"ruleId":"257","severity":1,"message":"258","line":103,"column":22,"nodeType":"265","messageId":"260","endLine":103,"endColumn":67},{"ruleId":"266","severity":1,"message":"267","line":103,"column":22,"nodeType":"265","messageId":"268","endLine":103,"endColumn":67},{"ruleId":"257","severity":1,"message":"258","line":110,"column":22,"nodeType":"265","messageId":"260","endLine":110,"endColumn":67},{"ruleId":"266","severity":1,"message":"267","line":110,"column":22,"nodeType":"265","messageId":"268","endLine":110,"endColumn":67},{"ruleId":"246","severity":1,"message":"247","line":19,"column":26,"nodeType":"248","messageId":"249","endLine":19,"endColumn":29,"suggestions":"272"},{"ruleId":"236","severity":1,"message":"262","line":28,"column":3,"nodeType":"238","messageId":"239","endLine":28,"endColumn":16},{"ruleId":"257","severity":1,"message":"258","line":40,"column":13,"nodeType":"264","messageId":"260","endLine":43,"endColumn":70},{"ruleId":"236","severity":1,"message":"273","line":51,"column":9,"nodeType":"238","messageId":"239","endLine":51,"endColumn":14},{"ruleId":"257","severity":1,"message":"258","line":59,"column":20,"nodeType":"265","messageId":"260","endLine":59,"endColumn":65},{"ruleId":"266","severity":1,"message":"267","line":59,"column":20,"nodeType":"265","messageId":"268","endLine":59,"endColumn":65},{"ruleId":"257","severity":1,"message":"258","line":66,"column":20,"nodeType":"265","messageId":"260","endLine":66,"endColumn":65},{"ruleId":"266","severity":1,"message":"267","line":66,"column":20,"nodeType":"265","messageId":"268","endLine":66,"endColumn":65},{"ruleId":"257","severity":1,"message":"258","line":73,"column":20,"nodeType":"265","messageId":"260","endLine":73,"endColumn":65},{"ruleId":"266","severity":1,"message":"267","line":73,"column":20,"nodeType":"265","messageId":"268","endLine":73,"endColumn":65},{"ruleId":"236","severity":1,"message":"274","line":24,"column":3,"nodeType":"238","messageId":"239","endLine":24,"endColumn":19},{"ruleId":"246","severity":1,"message":"247","line":83,"column":26,"nodeType":"248","messageId":"249","endLine":83,"endColumn":29,"suggestions":"275"},{"ruleId":"266","severity":1,"message":"267","line":190,"column":26,"nodeType":"265","messageId":"268","endLine":190,"endColumn":67},{"ruleId":"257","severity":1,"message":"258","line":190,"column":26,"nodeType":"265","messageId":"260","endLine":190,"endColumn":67},{"ruleId":"266","severity":1,"message":"267","line":198,"column":26,"nodeType":"265","messageId":"268","endLine":198,"endColumn":67},{"ruleId":"257","severity":1,"message":"258","line":198,"column":26,"nodeType":"265","messageId":"260","endLine":198,"endColumn":67},{"ruleId":"257","severity":1,"message":"258","line":206,"column":26,"nodeType":"265","messageId":"260","endLine":206,"endColumn":67},{"ruleId":"266","severity":1,"message":"267","line":206,"column":26,"nodeType":"265","messageId":"268","endLine":206,"endColumn":67},{"ruleId":"257","severity":1,"message":"258","line":230,"column":26,"nodeType":"265","messageId":"260","endLine":230,"endColumn":66},{"ruleId":"266","severity":1,"message":"267","line":230,"column":26,"nodeType":"265","messageId":"268","endLine":230,"endColumn":66},{"ruleId":"257","severity":1,"message":"258","line":238,"column":26,"nodeType":"265","messageId":"260","endLine":238,"endColumn":66},{"ruleId":"266","severity":1,"message":"267","line":238,"column":26,"nodeType":"265","messageId":"268","endLine":238,"endColumn":66},{"ruleId":"257","severity":1,"message":"258","line":246,"column":26,"nodeType":"265","messageId":"260","endLine":246,"endColumn":66},{"ruleId":"266","severity":1,"message":"267","line":246,"column":26,"nodeType":"265","messageId":"268","endLine":246,"endColumn":66},{"ruleId":"240","severity":1,"message":"276","line":51,"column":25,"nodeType":"238","messageId":"277","endLine":51,"endColumn":35},{"ruleId":"246","severity":1,"message":"247","line":51,"column":32,"nodeType":"248","messageId":"249","endLine":51,"endColumn":35,"suggestions":"278"},{"ruleId":"236","severity":1,"message":"279","line":3,"column":3,"nodeType":"238","messageId":"239","endLine":3,"endColumn":13},{"ruleId":"236","severity":1,"message":"280","line":5,"column":3,"nodeType":"238","messageId":"239","endLine":5,"endColumn":8},{"ruleId":"240","severity":1,"message":"241","line":43,"column":25,"nodeType":"242","messageId":"243","endLine":48,"endColumn":13},{"ruleId":"246","severity":1,"message":"247","line":8,"column":26,"nodeType":"248","messageId":"249","endLine":8,"endColumn":29,"suggestions":"281"},{"ruleId":"236","severity":1,"message":"282","line":11,"column":31,"nodeType":"238","messageId":"239","endLine":11,"endColumn":43},{"ruleId":"236","severity":1,"message":"283","line":7,"column":7,"nodeType":"238","messageId":"239","endLine":7,"endColumn":16},{"ruleId":"236","severity":1,"message":"284","line":14,"column":8,"nodeType":"238","messageId":"239","endLine":14,"endColumn":18},{"ruleId":"240","severity":1,"message":"276","line":64,"column":36,"nodeType":"238","messageId":"277","endLine":64,"endColumn":46},{"ruleId":"246","severity":1,"message":"247","line":64,"column":43,"nodeType":"248","messageId":"249","endLine":64,"endColumn":46,"suggestions":"285"},{"ruleId":"266","severity":1,"message":"286","line":83,"column":9,"nodeType":"265","messageId":"268","endLine":83,"endColumn":25},{"ruleId":"266","severity":1,"message":"286","line":93,"column":9,"nodeType":"265","messageId":"268","endLine":93,"endColumn":25},{"ruleId":"240","severity":1,"message":"241","line":3,"column":50,"nodeType":"242","messageId":"243","endLine":3,"endColumn":74},{"ruleId":"257","severity":1,"message":"258","line":5,"column":9,"nodeType":"264","messageId":"260","endLine":10,"endColumn":41},{"ruleId":"287","severity":1,"message":"288","line":11,"column":3,"nodeType":"289","messageId":"290","endLine":11,"endColumn":17},{"ruleId":"240","severity":1,"message":"241","line":13,"column":41,"nodeType":"242","messageId":"243","endLine":13,"endColumn":65},{"ruleId":"257","severity":1,"message":"258","line":15,"column":9,"nodeType":"264","messageId":"260","endLine":20,"endColumn":41},{"ruleId":"287","severity":1,"message":"288","line":21,"column":3,"nodeType":"289","messageId":"290","endLine":21,"endColumn":17},{"ruleId":"240","severity":1,"message":"241","line":24,"column":58,"nodeType":"242","messageId":"243","endLine":26,"endColumn":5},{"ruleId":"257","severity":1,"message":"258","line":33,"column":9,"nodeType":"264","messageId":"260","endLine":38,"endColumn":41},{"ruleId":"287","severity":1,"message":"288","line":39,"column":3,"nodeType":"289","messageId":"290","endLine":39,"endColumn":17},{"ruleId":"240","severity":1,"message":"241","line":41,"column":49,"nodeType":"242","messageId":"243","endLine":41,"endColumn":76},{"ruleId":"257","severity":1,"message":"258","line":49,"column":9,"nodeType":"264","messageId":"260","endLine":54,"endColumn":41},{"ruleId":"287","severity":1,"message":"288","line":55,"column":3,"nodeType":"289","messageId":"290","endLine":55,"endColumn":17},{"ruleId":"240","severity":1,"message":"241","line":58,"column":43,"nodeType":"242","messageId":"243","endLine":58,"endColumn":68},{"ruleId":"257","severity":1,"message":"258","line":60,"column":9,"nodeType":"264","messageId":"260","endLine":65,"endColumn":41},{"ruleId":"287","severity":1,"message":"288","line":66,"column":3,"nodeType":"289","messageId":"290","endLine":66,"endColumn":17},{"ruleId":"240","severity":1,"message":"241","line":69,"column":34,"nodeType":"242","messageId":"243","endLine":69,"endColumn":59},{"ruleId":"257","severity":1,"message":"258","line":71,"column":9,"nodeType":"264","messageId":"260","endLine":76,"endColumn":41},{"ruleId":"287","severity":1,"message":"288","line":77,"column":3,"nodeType":"289","messageId":"290","endLine":77,"endColumn":17},{"ruleId":"236","severity":1,"message":"291","line":7,"column":3,"nodeType":"238","messageId":"239","endLine":7,"endColumn":8},{"ruleId":"236","severity":1,"message":"237","line":16,"column":3,"nodeType":"238","messageId":"239","endLine":16,"endColumn":25},{"ruleId":"246","severity":1,"message":"247","line":22,"column":10,"nodeType":"248","messageId":"249","endLine":22,"endColumn":13,"suggestions":"292"},{"ruleId":"257","severity":1,"message":"258","line":39,"column":15,"nodeType":"238","messageId":"260","endLine":39,"endColumn":20},{"ruleId":"257","severity":1,"message":"258","line":52,"column":15,"nodeType":"238","messageId":"260","endLine":52,"endColumn":20},{"ruleId":"246","severity":1,"message":"247","line":98,"column":10,"nodeType":"248","messageId":"249","endLine":98,"endColumn":13,"suggestions":"293"},{"ruleId":"257","severity":1,"message":"258","line":117,"column":15,"nodeType":"238","messageId":"260","endLine":117,"endColumn":20},{"ruleId":"257","severity":1,"message":"258","line":130,"column":15,"nodeType":"238","messageId":"260","endLine":130,"endColumn":20},{"ruleId":"236","severity":1,"message":"291","line":7,"column":3,"nodeType":"238","messageId":"239","endLine":7,"endColumn":8},{"ruleId":"236","severity":1,"message":"237","line":16,"column":3,"nodeType":"238","messageId":"239","endLine":16,"endColumn":25},{"ruleId":"246","severity":1,"message":"247","line":22,"column":10,"nodeType":"248","messageId":"249","endLine":22,"endColumn":13,"suggestions":"294"},{"ruleId":"257","severity":1,"message":"258","line":39,"column":15,"nodeType":"238","messageId":"260","endLine":39,"endColumn":20},{"ruleId":"257","severity":1,"message":"258","line":52,"column":15,"nodeType":"238","messageId":"260","endLine":52,"endColumn":20},{"ruleId":"246","severity":1,"message":"247","line":100,"column":10,"nodeType":"248","messageId":"249","endLine":100,"endColumn":13,"suggestions":"295"},{"ruleId":"257","severity":1,"message":"258","line":119,"column":15,"nodeType":"238","messageId":"260","endLine":119,"endColumn":20},{"ruleId":"257","severity":1,"message":"258","line":132,"column":15,"nodeType":"238","messageId":"260","endLine":132,"endColumn":20},{"ruleId":"236","severity":1,"message":"291","line":7,"column":3,"nodeType":"238","messageId":"239","endLine":7,"endColumn":8},{"ruleId":"236","severity":1,"message":"237","line":16,"column":3,"nodeType":"238","messageId":"239","endLine":16,"endColumn":25},{"ruleId":"246","severity":1,"message":"247","line":22,"column":10,"nodeType":"248","messageId":"249","endLine":22,"endColumn":13,"suggestions":"296"},{"ruleId":"257","severity":1,"message":"258","line":39,"column":15,"nodeType":"238","messageId":"260","endLine":39,"endColumn":20},{"ruleId":"257","severity":1,"message":"258","line":52,"column":15,"nodeType":"238","messageId":"260","endLine":52,"endColumn":20},{"ruleId":"246","severity":1,"message":"247","line":107,"column":10,"nodeType":"248","messageId":"249","endLine":107,"endColumn":13,"suggestions":"297"},{"ruleId":"257","severity":1,"message":"258","line":126,"column":15,"nodeType":"238","messageId":"260","endLine":126,"endColumn":20},{"ruleId":"257","severity":1,"message":"258","line":139,"column":15,"nodeType":"238","messageId":"260","endLine":139,"endColumn":20},{"ruleId":"240","severity":1,"message":"241","line":5,"column":25,"nodeType":"242","messageId":"243","endLine":5,"endColumn":65},{"ruleId":"240","severity":1,"message":"241","line":58,"column":30,"nodeType":"242","messageId":"243","endLine":58,"endColumn":70},{"ruleId":"236","severity":1,"message":"279","line":3,"column":3,"nodeType":"238","messageId":"239","endLine":3,"endColumn":13},{"ruleId":"236","severity":1,"message":"282","line":12,"column":31,"nodeType":"238","messageId":"239","endLine":12,"endColumn":43},"handle-callback-err",[],"no-negated-in-lhs",["298"],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'investigatorClassColor' is defined but never used.","Identifier","unusedVar","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","'event' is defined but never used.","'checked' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["299","300"],["301","302"],["303","304"],["305","306"],"@typescript-eslint/no-use-before-define","'investigatorList' was used before it was defined.","noUseBeforeDefine","@typescript-eslint/no-unsafe-assignment","Unsafe assignment of an any value.","AssignmentExpression","anyAssignment",["307","308"],"'handleSetYear' is defined but never used.","'classes' is assigned a value but never used.","VariableDeclarator","MemberExpression","@typescript-eslint/no-unsafe-member-access","Unsafe member access [selectedYear] on an any value.","unsafeMemberExpression","'getInvestigatorSumByDate' is defined but never used.","'SubTitle' is defined but never used.",["309","310"],["311","312"],"'color' is assigned a value but never used.","'investigatorList' is defined but never used.",["313","314"],"Argument 'props' should be typed with a non-any type.","anyTypedArg",["315","316"],"'withStyles' is defined but never used.","'Theme' is defined but never used.",["317","318"],"'theme' is defined but never used.","'Accordion' is assigned a value but never used.","'Typography' is defined but never used.",["319","320"],"Unsafe member access .pickerType on an any value.","@typescript-eslint/no-unsafe-return","Unsafe return of an any typed value","ReturnStatement","unsafeReturn","'YAxis' is defined but never used.",["321","322"],["323","324"],["325","326"],["327","328"],["329","330"],["331","332"],"no-unsafe-negation",{"messageId":"333","fix":"334","desc":"335"},{"messageId":"336","fix":"337","desc":"338"},{"messageId":"333","fix":"339","desc":"335"},{"messageId":"336","fix":"340","desc":"338"},{"messageId":"333","fix":"341","desc":"335"},{"messageId":"336","fix":"342","desc":"338"},{"messageId":"333","fix":"343","desc":"335"},{"messageId":"336","fix":"344","desc":"338"},{"messageId":"333","fix":"345","desc":"335"},{"messageId":"336","fix":"346","desc":"338"},{"messageId":"333","fix":"347","desc":"335"},{"messageId":"336","fix":"348","desc":"338"},{"messageId":"333","fix":"349","desc":"335"},{"messageId":"336","fix":"350","desc":"338"},{"messageId":"333","fix":"351","desc":"335"},{"messageId":"336","fix":"352","desc":"338"},{"messageId":"333","fix":"353","desc":"335"},{"messageId":"336","fix":"354","desc":"338"},{"messageId":"333","fix":"355","desc":"335"},{"messageId":"336","fix":"356","desc":"338"},{"messageId":"333","fix":"357","desc":"335"},{"messageId":"336","fix":"358","desc":"338"},{"messageId":"333","fix":"359","desc":"335"},{"messageId":"336","fix":"360","desc":"338"},{"messageId":"333","fix":"361","desc":"335"},{"messageId":"336","fix":"362","desc":"338"},{"messageId":"333","fix":"363","desc":"335"},{"messageId":"336","fix":"364","desc":"338"},{"messageId":"333","fix":"365","desc":"335"},{"messageId":"336","fix":"366","desc":"338"},{"messageId":"333","fix":"367","desc":"335"},{"messageId":"336","fix":"368","desc":"338"},{"messageId":"333","fix":"369","desc":"335"},{"messageId":"336","fix":"370","desc":"338"},"suggestUnknown",{"range":"371","text":"372"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"371","text":"373"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"374","text":"372"},{"range":"374","text":"373"},{"range":"375","text":"372"},{"range":"375","text":"373"},{"range":"376","text":"372"},{"range":"376","text":"373"},{"range":"377","text":"372"},{"range":"377","text":"373"},{"range":"378","text":"372"},{"range":"378","text":"373"},{"range":"379","text":"372"},{"range":"379","text":"373"},{"range":"380","text":"372"},{"range":"380","text":"373"},{"range":"381","text":"372"},{"range":"381","text":"373"},{"range":"382","text":"372"},{"range":"382","text":"373"},{"range":"383","text":"372"},{"range":"383","text":"373"},{"range":"384","text":"372"},{"range":"384","text":"373"},{"range":"385","text":"372"},{"range":"385","text":"373"},{"range":"386","text":"372"},{"range":"386","text":"373"},{"range":"387","text":"372"},{"range":"387","text":"373"},{"range":"388","text":"372"},{"range":"388","text":"373"},{"range":"389","text":"372"},{"range":"389","text":"373"},[3443,3446],"unknown","never",[168,171],[321,324],[443,446],[997,1000],[753,756],[516,519],[2086,2089],[1253,1256],[262,265],[1688,1691],[416,419],[2333,2336],[418,421],[2404,2407],[418,421],[2674,2677]]